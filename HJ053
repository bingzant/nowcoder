// 找规律方法
#include <iostream>
#include <bits/stdc++.h>
using namespace std;

int main() {
    int n;
    cin >> n;
    if (n < 3) cout << -1 << endl;
    else if (n % 4 == 0) cout << 3 << endl;
    else if (n % 2 == 0) cout << 4 << endl;
    else cout << 2 << endl;
}


// 算出最后一行，对于大数会超时。可以优化：每行不需要算出值，只需要存储是奇数还是偶数就可以了。
#include <iostream>
#include <bits/stdc++.h>
using namespace std;

int main() {
    int n;
    cin >> n;
    n = n - 1;
    if (n <= 1) {
        cout << -1 << endl;
        return 0;
    }
    vector<int> last_level = {1, 1, 1};
    vector<int> this_level;
    for (int i = 2; i <= n; i++) {
        int last_size = last_level.size();
        for (int j = 0; j <= last_size + 2; j++) {
            int num = 0;
            if (j - 2 >= 0 && j - 2 < last_size) num += last_level[j - 2];
            if (j - 1 >= 0 && j - 1 < last_size) num += last_level[j - 1];
            if (j >= 0 && j < last_size) num += last_level[j];
            this_level.push_back(num);
            if (i == n && num % 2 == 0) {
                cout << j + 1 << endl;
                return 0;
            }
        }
        last_level = this_level;
        this_level = {};
    }
    cout << -1 << endl;
}
